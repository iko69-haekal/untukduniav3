{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Button, message, Upload } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Admin from \"../../../../components/admin\";\nimport { api } from \"../../../../config/urlapi\";\nimport { useRouter } from \"next/router\";\n\nconst ubahJmb = ({\n  image\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: images,\n    1: setImages\n  } = useState(\"\");\n  useEffect(() => {\n    setImages(image.image);\n  }, []);\n\n  const submit = () => {\n    setLoading(true);\n    const form = new FormData();\n    form.append(\"image\", images);\n    form.append(\"old_pict\", images);\n    Axios.post(`${api}image-management/images` + id, form, {\n      headers: {\n        \"content-type\": \"multipart/form-data; boundary=---011000010111000001101001\",\n        api_token: localStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      document.location.href = \"/admin/galery\";\n    }).catch(err => {\n      console.log(\"Error\" + err);\n      message.error(\"pastikan semua input terisi dengan benar\");\n    }).finally(e => setLoading(false));\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Admin, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"row justify-content-center mt-5 pt-5\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"Gambar Produk: \"\n            }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Upload, {\n              beforeUpload: file => {\n                if (file.size > 700000) {\n                  message.error(\"file terlalu besar\");\n                  return false;\n                }\n\n                setImages(file);\n                return false;\n              },\n              children: /*#__PURE__*/_jsx(Button, {\n                icon: /*#__PURE__*/_jsx(UploadOutlined, {}),\n                children: \"Click to Upload\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            loading: loading,\n            onClick: submit,\n            type: \"primary\",\n            block: true,\n            children: \"Ubah\"\n          })]\n        })\n      })\n    })\n  });\n};\n\nubahJmb.getInitialProps = async ({\n  query\n}) => {\n  const {\n    id\n  } = query;\n  let image = await Axios.get(`${api}image-management/images` + id);\n  image = image.data.data;\n  return {\n    image: image\n  };\n};\n\nexport default ubahJmb;","map":{"version":3,"sources":["C:/untukduniav3/pages/admin/jumbotron/ubah/[id].js"],"names":["Button","message","Upload","UploadOutlined","Axios","useState","useEffect","Admin","api","useRouter","ubahJmb","image","router","id","query","loading","setLoading","images","setImages","submit","form","FormData","append","post","headers","api_token","localStorage","getItem","then","res","document","location","href","catch","err","console","log","error","finally","e","file","size","getInitialProps","get","data"],"mappings":"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","sourcesContent":["import { Button, message, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Admin from \"../../../../components/admin\";\r\nimport { api } from \"../../../../config/urlapi\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst ubahJmb = ({ image }) => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const [loading, setLoading] = useState(false);\r\n  const [images, setImages] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setImages(image.image);\r\n  }, []);\r\n  const submit = () => {\r\n    setLoading(true);\r\n    const form = new FormData();\r\n\r\n    form.append(\"image\", images);\r\n    form.append(\"old_pict\", images);\r\n\r\n    Axios.post(`${api}image-management/images` + id, form, {\r\n      headers: {\r\n        \"content-type\":\r\n          \"multipart/form-data; boundary=---011000010111000001101001\",\r\n        api_token: localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        document.location.href = \"/admin/galery\";\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error\" + err);\r\n        message.error(\"pastikan semua input terisi dengan benar\");\r\n      })\r\n      .finally((e) => setLoading(false));\r\n  };\r\n  return (\r\n    <>\r\n      <Admin>\r\n        <div className=\"row justify-content-center mt-5 pt-5\">\r\n          <div className=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Gambar Produk: </label>\r\n              <br />\r\n              <Upload\r\n                beforeUpload={(file) => {\r\n                  if (file.size > 700000) {\r\n                    message.error(\"file terlalu besar\");\r\n                    return false;\r\n                  }\r\n                  setImages(file);\r\n                  return false;\r\n                }}\r\n              >\r\n                <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n              </Upload>\r\n            </div>\r\n            <Button loading={loading} onClick={submit} type=\"primary\" block>\r\n              Ubah\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Admin>\r\n    </>\r\n  );\r\n};\r\nubahJmb.getInitialProps = async ({ query }) => {\r\n  const { id } = query;\r\n  let image = await Axios.get(`${api}image-management/images` + id);\r\n  image = image.data.data;\r\n  return { image: image };\r\n};\r\n\r\nexport default ubahJmb;\r\n"]},"metadata":{},"sourceType":"module"}